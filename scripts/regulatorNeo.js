class RegulatorNeo {
	constructor() {
		// [ 基音, 清濁拗区分, 長音変換 ]
		this.database = {
			"あ":["あ",0,"あ",],
			"ぁ":["あ",3,"あ",],
			"い":["い",0,"い",],
			"ぃ":["い",3,"い",],
			"う":["う",0,"う",],
			"ゔ":["う",1,"う",],
			"ぅ":["う",3,"う",],
			"え":["え",0,"え",],
			"ぇ":["え",3,"え",],
			"お":["お",0,"お",],
			"ぉ":["お",3,"お",],
			"か":["か",0,"あ",],
			"が":["か",1,"あ",],
			"ゕ":["か",3,"あ",],
			"き":["き",0,"い",],
			"ぎ":["き",1,"い",],
			"く":["く",0,"う",],
			"ぐ":["く",1,"う",],
			"け":["け",0,"え",],
			"げ":["け",1,"え",],
			"ゖ":["け",3,"え",],
			"こ":["こ",0,"お",],
			"ご":["こ",1,"お",],
			"さ":["さ",0,"あ",],
			"ざ":["さ",1,"あ",],
			"し":["し",0,"い",],
			"じ":["し",1,"い",],
			"す":["す",0,"う",],
			"ず":["す",1,"う",],
			"せ":["せ",0,"え",],
			"ぜ":["せ",1,"え",],
			"そ":["そ",0,"お",],
			"ぞ":["そ",1,"お",],
			"た":["た",0,"あ",],
			"だ":["た",1,"あ",],
			"ち":["ち",0,"い",],
			"ぢ":["ち",1,"い",],
			"つ":["つ",0,"う",],
			"づ":["つ",1,"う",],
			"っ":["つ",3,"う",],
			"て":["て",0,"え",],
			"で":["て",1,"え",],
			"と":["と",0,"お",],
			"ど":["と",1,"お",],
			"な":["な",0,"あ",],
			"に":["に",0,"い",],
			"ぬ":["ぬ",0,"う",],
			"ね":["ね",0,"え",],
			"の":["の",0,"お",],
			"は":["は",0,"あ",],
			"ば":["は",1,"あ",],
			"ぱ":["は",2,"あ",],
			"ひ":["ひ",0,"い",],
			"び":["ひ",1,"い",],
			"ぴ":["ひ",2,"い",],
			"ふ":["ふ",0,"う",],
			"ぶ":["ふ",1,"う",],
			"ぷ":["ふ",2,"う",],
			"へ":["へ",0,"え",],
			"べ":["へ",1,"え",],
			"ぺ":["へ",2,"え",],
			"ほ":["ほ",0,"お",],
			"ぼ":["ほ",1,"お",],
			"ぽ":["ほ",2,"お",],
			"ま":["ま",0,"あ",],
			"み":["み",0,"い",],
			"む":["む",0,"う",],
			"め":["め",0,"え",],
			"も":["も",0,"お",],
			"や":["や",0,"あ",],
			"ゃ":["や",3,"あ",],
			"ゆ":["ゆ",0,"う",],
			"ゅ":["ゆ",3,"う",],
			"よ":["よ",0,"お",],
			"ょ":["よ",3,"お",],
			"ら":["ら",0,"あ",],
			"り":["り",0,"い",],
			"る":["る",0,"う",],
			"れ":["れ",0,"え",],
			"ろ":["ろ",0,"お",],
			"わ":["わ",0,"あ",],
			"ゎ":["わ",3,"あ",],
			"ゐ":["ゐ",0,"い",],
			"ゑ":["ゑ",0,"え",],
			"を":["を",0,"お",],
			"ん":["ん",0,"ん",],
			"#":["#",0,"#",],
		};
	}

	toInternalRep(str) {
		const arr = (str) ? str.split("") : [];
		arr.unshift("");		// sentinel
		const rString = [""];
		const rProperty = [""];
		let lastVowel = "";
		for (let i = 0; i < arr.length; i++) {
			let ch = arr[i];
			if (ch == "") {
				continue;
			}
			if (ch == "ー") {
				ch = lastVowel;
			}
			if (!(ch in this.database)) {
				rString.push("?");
				rProperty.push(0);
				lastVowel = "あ";
			} else {
				rString.push(this.database[ch][0]);
				rProperty.push(this.database[ch][1]);
				lastVowel = this.database[ch][2];
			}
		}
		return [rString.join(""), rProperty.join("")];
	}

	compare(a, b) {
		const ia = this.toInternalRep(a);
		const ib = this.toInternalRep(b);
		if (ia[0] < ib[0]) {
			return -1;
		}
		if (ia[0] > ib[0]) {
			return 1;
		}
		if (ia[1] < ib[1]) {
			return -1;
		}
		if (ia[1] > ib[1]) {
			return 1;
		}
		return 0;
	}
}
